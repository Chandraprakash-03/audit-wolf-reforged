{
  "openapi": "3.0.3",
  "info": {
    "title": "Audit Wolf API",
    "description": "Comprehensive smart contract auditing platform API that combines AI-powered analysis \nwith traditional static analysis tools to provide detailed security assessments of Solidity contracts.\n",
    "version": "1.0.0",
    "contact": {
      "name": "Audit Wolf Support",
      "email": "support@auditwolf.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/api",
      "description": "Development server"
    },
    {
      "url": "https://api.auditwolf.com/api",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "System health check",
        "description": "Check overall system health and status",
        "security": [],
        "responses": {
          "200": {
            "description": "System is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "503": {
            "description": "System is unhealthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticate user with email and password",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User registration",
        "description": "Register a new user account",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input or user already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get user contracts",
        "description": "Retrieve all contracts belonging to the authenticated user",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number for pagination",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contracts retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Create new contract",
        "description": "Upload or paste a new Solidity contract for analysis",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateContractRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contract created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid contract data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/{id}": {
      "get": {
        "tags": [
          "Contracts"
        ],
        "summary": "Get contract by ID",
        "description": "Retrieve a specific contract by its ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Contract UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Contracts"
        ],
        "summary": "Update contract",
        "description": "Update contract metadata",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Contract UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contract updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContractResponse"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Contracts"
        ],
        "summary": "Delete contract",
        "description": "Delete a contract and all associated audits",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "Contract UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Contract deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Contract not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contracts/validate": {
      "post": {
        "tags": [
          "Contracts"
        ],
        "summary": "Validate contract source code",
        "description": "Validate Solidity source code without creating a contract",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/start": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Start contract analysis",
        "description": "Queue a new analysis job for a contract",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StartAnalysisRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Analysis started successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisStartResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/{auditId}/progress": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get analysis progress",
        "description": "Get real-time progress of an ongoing analysis",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "description": "Audit UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Progress retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgressResponse"
                }
              }
            }
          },
          "404": {
            "description": "Audit not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/{auditId}/results": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get analysis results",
        "description": "Retrieve completed analysis results",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "description": "Audit UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisResultsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Audit not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/validate": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Validate contract for analysis",
        "description": "Quick validation of contract source code",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateContractRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validation completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/analysis/health": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Analysis system health",
        "description": "Check health of analysis services (Slither, AI models)",
        "responses": {
          "200": {
            "description": "System health status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisHealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reports/generate": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Generate audit report",
        "description": "Generate HTML and/or PDF report for completed audit",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateReportRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report generated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportGenerationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or audit not completed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{auditId}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Get report information",
        "description": "Get information about existing reports for an audit",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "description": "Audit UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Report information retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Audit not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{auditId}/download/{format}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Download report file",
        "description": "Download HTML or PDF report file",
        "parameters": [
          {
            "name": "auditId",
            "in": "path",
            "required": true,
            "description": "Audit UUID",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "format",
            "in": "path",
            "required": true,
            "description": "Report format",
            "schema": {
              "type": "string",
              "enum": [
                "html",
                "pdf"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File download",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Report file not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "Error message"
          },
          "details": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "healthy",
                  "degraded",
                  "unhealthy"
                ]
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              },
              "services": {
                "type": "object",
                "properties": {
                  "database": {
                    "type": "string",
                    "enum": [
                      "healthy",
                      "unhealthy"
                    ]
                  },
                  "redis": {
                    "type": "string",
                    "enum": [
                      "healthy",
                      "unhealthy"
                    ]
                  },
                  "slither": {
                    "type": "string",
                    "enum": [
                      "healthy",
                      "unhealthy"
                    ]
                  },
                  "ai_models": {
                    "type": "string",
                    "enum": [
                      "healthy",
                      "unhealthy"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "securepassword123"
          }
        }
      },
      "RegisterRequest": {
        "type": "object",
        "required": [
          "email",
          "password",
          "name"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "example": "securepassword123"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "token": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "subscription_tier": {
            "type": "string",
            "enum": [
              "free",
              "pro",
              "enterprise"
            ]
          },
          "api_credits": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateContractRequest": {
        "type": "object",
        "required": [
          "name",
          "sourceCode"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "MyToken"
          },
          "sourceCode": {
            "type": "string",
            "example": "pragma solidity ^0.8.0;\n\ncontract MyToken {\n    // Contract code here\n}"
          },
          "compilerVersion": {
            "type": "string",
            "example": "0.8.19"
          }
        }
      },
      "UpdateContractRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "UpdatedTokenName"
          }
        }
      },
      "Contract": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "source_code": {
            "type": "string"
          },
          "compiler_version": {
            "type": "string"
          },
          "file_hash": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ContractResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/Contract"
          }
        }
      },
      "ContractsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Contract"
            }
          }
        }
      },
      "ValidateContractRequest": {
        "type": "object",
        "required": [
          "sourceCode"
        ],
        "properties": {
          "sourceCode": {
            "type": "string",
            "example": "pragma solidity ^0.8.0;\n\ncontract MyToken {\n    // Contract code here\n}"
          }
        }
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "isValid": {
                "type": "boolean"
              },
              "errors": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "metrics": {
                "type": "object",
                "properties": {
                  "complexity": {
                    "type": "integer"
                  },
                  "lines_of_code": {
                    "type": "integer"
                  },
                  "functions_count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "StartAnalysisRequest": {
        "type": "object",
        "required": [
          "contractId",
          "analysisType"
        ],
        "properties": {
          "contractId": {
            "type": "string",
            "format": "uuid"
          },
          "analysisType": {
            "type": "string",
            "enum": [
              "static",
              "ai",
              "full"
            ]
          },
          "priority": {
            "type": "integer",
            "enum": [
              1,
              5,
              10,
              15
            ],
            "description": "1=low, 5=normal, 10=high, 15=critical"
          },
          "options": {
            "type": "object",
            "properties": {
              "includeGasOptimization": {
                "type": "boolean"
              },
              "aiModels": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AnalysisStartResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "auditId": {
                "type": "string",
                "format": "uuid"
              },
              "jobId": {
                "type": "string"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "ProgressResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "pending",
                  "analyzing",
                  "completed",
                  "failed"
                ]
              },
              "progress": {
                "type": "integer",
                "minimum": 0,
                "maximum": 100
              },
              "currentStep": {
                "type": "string"
              },
              "estimatedTimeRemaining": {
                "type": "integer",
                "description": "Seconds remaining"
              }
            }
          }
        }
      },
      "AnalysisResultsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "auditId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string"
              },
              "vulnerabilities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Vulnerability"
                }
              },
              "gasOptimizations": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/GasOptimization"
                }
              },
              "summary": {
                "type": "object",
                "properties": {
                  "total_vulnerabilities": {
                    "type": "integer"
                  },
                  "critical_count": {
                    "type": "integer"
                  },
                  "high_count": {
                    "type": "integer"
                  },
                  "medium_count": {
                    "type": "integer"
                  },
                  "low_count": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "AnalysisHealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "slither": {
                "type": "object",
                "properties": {
                  "available": {
                    "type": "boolean"
                  },
                  "version": {
                    "type": "string"
                  }
                }
              },
              "ai_models": {
                "type": "object",
                "properties": {
                  "available": {
                    "type": "boolean"
                  },
                  "models": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "queue": {
                "type": "object",
                "properties": {
                  "active_jobs": {
                    "type": "integer"
                  },
                  "pending_jobs": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "Vulnerability": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "enum": [
              "reentrancy",
              "overflow",
              "access_control",
              "gas_optimization",
              "best_practice"
            ]
          },
          "severity": {
            "type": "string",
            "enum": [
              "critical",
              "high",
              "medium",
              "low",
              "informational"
            ]
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "line": {
                "type": "integer"
              },
              "column": {
                "type": "integer"
              },
              "function": {
                "type": "string"
              }
            }
          },
          "recommendation": {
            "type": "string"
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "source": {
            "type": "string",
            "enum": [
              "static",
              "ai",
              "combined"
            ]
          }
        }
      },
      "GasOptimization": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "location": {
            "type": "object",
            "properties": {
              "line": {
                "type": "integer"
              },
              "function": {
                "type": "string"
              }
            }
          },
          "estimated_savings": {
            "type": "integer"
          },
          "recommendation": {
            "type": "string"
          }
        }
      },
      "GenerateReportRequest": {
        "type": "object",
        "required": [
          "auditId",
          "format"
        ],
        "properties": {
          "auditId": {
            "type": "string",
            "format": "uuid"
          },
          "format": {
            "type": "string",
            "enum": [
              "html",
              "pdf",
              "both"
            ]
          },
          "reportType": {
            "type": "string",
            "enum": [
              "standard",
              "executive",
              "detailed"
            ],
            "default": "standard"
          },
          "includeSourceCode": {
            "type": "boolean",
            "default": false
          },
          "customOptions": {
            "type": "object"
          }
        }
      },
      "ReportGenerationResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "auditId": {
                "type": "string",
                "format": "uuid"
              },
              "contractName": {
                "type": "string"
              },
              "generatedAt": {
                "type": "string",
                "format": "date-time"
              },
              "html": {
                "type": "object",
                "properties": {
                  "available": {
                    "type": "boolean"
                  },
                  "downloadUrl": {
                    "type": "string"
                  }
                }
              },
              "pdf": {
                "type": "object",
                "properties": {
                  "available": {
                    "type": "boolean"
                  },
                  "downloadUrl": {
                    "type": "string"
                  },
                  "size": {
                    "type": "integer"
                  },
                  "pages": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "ReportInfoResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "auditId": {
                "type": "string",
                "format": "uuid"
              },
              "hasReport": {
                "type": "boolean"
              },
              "reportGeneratedAt": {
                "type": "string",
                "format": "date-time"
              },
              "files": {
                "type": "object",
                "properties": {
                  "html": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "downloadUrl": {
                        "type": "string"
                      }
                    }
                  },
                  "pdf": {
                    "type": "object",
                    "properties": {
                      "available": {
                        "type": "boolean"
                      },
                      "size": {
                        "type": "integer"
                      },
                      "downloadUrl": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Health",
      "description": "System health and monitoring endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Contracts",
      "description": "Smart contract management"
    },
    {
      "name": "Analysis",
      "description": "Contract analysis and auditing"
    },
    {
      "name": "Reports",
      "description": "Audit report generation and management"
    }
  ]
}